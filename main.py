import requests
import time
import traceback
from config import *
from VKLong import Bot
from tools.others import *
from tools.keyboards import *

bot = Bot(token=BOT_TOKEN)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
action = {}
users = {}
profiles = {}
offsets = {}

try:
    @bot.get_updates
    def main(event):
        if event.type == "message_new":

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ç–≤–µ—Ç–∞:
            message_obj = event.response['message']
            user_id = message_obj['from_id']
            message = message_obj['text'].lower()

            if user_id not in list(action.keys()):
                user_data = get_user_data(user_id)
                users[user_id] = user_data

                # –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ:
                if user_data[0] is None:
                    action[user_id] = "enter_city"
                    bot.answer("üòø –£–≤—ã, –Ω–æ –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ —Ç–≤–æ—ë–º –º–µ—Å—Ç–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è!\n"
                               "\n"
                               "üëâ –£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞:")

                elif user_data[2] is None:
                    action[user_id] = "enter_age"
                    bot.answer("üòø –£–≤—ã, –Ω–æ –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ —Ç–≤–æ—ë–º –≤–æ–∑—Ä–∞—Å—Ç–µ!\n"
                               "\n"
                               "üëâ –£–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:")

                elif user_data[3] is None:
                    action[user_id] = "enter_sex"
                    bot.answer("üòø –£–≤—ã, –Ω–æ –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ —Ç–≤–æ—ë–º –ø–æ–ª–µ!\n"
                               "\n"
                               "üëâ –£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª:")
                else:
                    action[user_id] = "null"
                    bot.answer("ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –ø–æ–∏—Å–∫—É –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤.", key_search)


            else:
                if action[user_id] == "enter_city":
                    city_result = get_city_list(message)
                    if city_result:
                        if city_result != "error":
                            users[user_id][0] = city_result
                            if users[user_id][2] is None:
                                action[user_id] = "enter_age"
                                bot.answer("üò∫ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:")
                            elif users[user_id][3] is None:
                                action[user_id] = "enter_sex"
                                bot.answer("üò∫ –û—Ç–ª–∏—á–Ω–æ! –ù–∞–º –æ—Å—Ç–∞–ª–æ—Å—å —É–∑–Ω–∞—Ç—å —Ç–≤–æ–π –ø–æ–ª:", key_sex_choice)
                            else:
                                action[user_id] = "null"
                                bot.answer("ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –ø–æ–∏—Å–∫—É –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤.", key_search)
                        else:
                            bot.answer("üòø –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ!\n"
                                       "\n"
                                       "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–æ–∑–¥–Ω–µ–µ.")
                    else:
                        bot.answer("üòæ –ù–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ.\n"
                                   "\n"
                                   "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –≤–≤–æ–¥–∞:")
                elif action[user_id] == "enter_age":
                    age = validate_age(message)
                    if age:
                        if age != "error":
                            users[user_id][2] = age
                            if user_id[user_id][3] is None:
                                action[user_id] = "enter_sex"
                                bot.answer("üò∫ –û—Ç–ª–∏—á–Ω–æ! –ù–∞–º –æ—Å—Ç–∞–ª–æ—Å—å —É–∑–Ω–∞—Ç—å —Ç–≤–æ–π –ø–æ–ª:", key_sex_choice)
                            else:
                                action[user_id] = "null"
                                bot.answer("ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –ø–æ–∏—Å–∫—É –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤.", key_search)
                        else:
                            bot.answer("üòø –£–ø—Å! –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 14 –¥–æ 100 –ª–µ—Ç!\n"
                                       "\n"
                                       "–ï—Å–ª–∏ –≤—ã –Ω–µ—á–∞—è–Ω–Ω–æ –æ—à–∏–±–ª–∏—Å—å, —Ç–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –≤–≤–æ–¥–∞:")
                    else:
                        bot.answer("ü§ö –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!\n"
                                   "\n"
                                   "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞:")
                elif action[user_id] == "enter_sex":
                    sex = validate_sex(message)
                    if sex:
                        users[user_id][3] = sex
                        action[user_id] = "null"
                        bot.answer("ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –ø–æ–∏—Å–∫—É –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤.", key_search)
                    else:
                        bot.answer("ü§ö –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ–ª!\n"
                                   "\n"
                                   "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", key_sex_choice)

                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω–∏–ª –≤—Å–µ –¥–∞–Ω–Ω—ã–µ:
                elif action[user_id] == "null":
                    if message == "–ø–æ–∏—Å–∫!" or message == "–ø–æ–∏—Å–∫":
                        if user_id not in list(profiles.keys()):
                            bot.answer("üîé –ü–æ–¥–±–∏—Ä–∞–µ–º –¥–ª—è –≤–∞—Å –Ω–∞–∏–ª—É—á—à–∏–µ –∞–Ω–∫–µ—Ç—ã...")
                            try:
                                profiles[user_id] = search_users(users[user_id])
                                bot.answer("ü•≥ –ê–Ω–∫–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω—ã!\n"
                                           "\n"
                                           "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å.", key_search)
                            except:
                                bot.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∞–Ω–∫–µ—Ç...", key_search)
                        if user_id not in list(offsets.keys()):
                            offsets[user_id] = 0
                        else:
                            profile_data = fetch_profiles(search_users(users[user_id]), user_id, offsets[user_id])
                            offsets[user_id] = profile_data[4]
                            bot.answer(f"üíñ {profile_data[0]}, {profile_data[1]} –ª–µ—Ç\n"
                                       f"–°—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: https://vk.com/id{profile_data[2]}", attachment=profile_data[3],
                                       keyboard=key_search)

except requests.ConnectionError or requests.ConnectTimeout:
    time.sleep(30)

except:
    traceback.print_exc()
