import requests
import time
import traceback
from config import *
from VKLong import Bot
from tools.keyboards import *

from utils.tools import *

bot = Bot(token=BOT_TOKEN)

# –°–ª–æ–≤–∞—Ä–∏:
users = {}
action = {}

print("–°—Ç–∞—Ä—Ç—É–µ–º!")

@bot.get_updates
def main(event):
    if event.type == "message_new":

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ç–≤–µ—Ç–∞:
        message_obj = event.response['message']
        user_id = message_obj['from_id']
        message = message_obj['text'].lower()

        if user_id not in list(users.keys()):
            user_data = get_user_information(user_id)
            users[user_id] = {}
            users[user_id]['data'] = user_data
            users[user_id]['offset'] = 0
            users[user_id]['searched_profiles'] = {}
            action[user_id] = "unknown"

        if user_id in list(users.keys()):
            age = users[user_id]['data']['age']
            sex = users[user_id]['data']['sex']
            city_id = users[user_id]['data']['city_id']
            user_action = action[user_id]
            if age is None:
                if user_action == "unknown":
                    bot.answer("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")
                    action[user_id] = "enter_age"
                else:
                    if validate_age(message):
                        users[user_id]['data']['age'] = message
                        if sex is None:
                            bot.answer("‚úçÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", key_sex_choice)
                            action[user_id] = "enter_sex"
                        elif city_id is None:
                            bot.answer("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –∞–Ω–∫–µ—Ç—ã:")
                            action[user_id] = "enter_city"
                        else:
                            action[user_id] = "null"
                            bot.answer("üò∫ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∞–Ω–∫–µ—Ç.", key_search)
                    else:
                        bot.answer("ü§ö –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 18-—Ç–∏ –¥–æ 99-—Ç–∏ –ª–µ—Ç!\n"
                                   "\n"
                                   "‚úçÔ∏è –ï—Å–ª–∏ –≤—ã –æ—à–∏–±–ª–∏—Å—å, —Ç–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –≤–≤–æ–¥–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ:")
            elif sex is None:
                if user_action != "enter_sex":
                    bot.answer("‚úçÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", key_sex_choice)
                    action[user_id] = "enter_sex"
                else:
                    if message == "–º—É–∂—Å–∫–æ–π" or message == "–∂–µ–Ω—Å–∫–∏–π":
                        if message == "–º—É–∂—Å–∫–æ–π":
                            users[user_id]['data']['sex'] = 2
                        elif message == "–∂–µ–Ω—Å–∫–∏–π":
                            users[user_id]['data']['sex'] = 1
                        if city_id is None:
                            action[user_id] = "enter_city"
                            bot.answer("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –∞–Ω–∫–µ—Ç—ã:")
                        else:
                            action[user_id] = "null"
                            bot.answer("üò∫ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∞–Ω–∫–µ—Ç.", key_search)
                    else:
                        bot.answer("ü§ö –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ–ª!\n"
                                   "\n"
                                   "‚úçÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", key_sex_choice)

            elif city_id is None:
                if user_action != "enter_city":
                    action[user_id] = "enter_city"
                    bot.answer("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –∞–Ω–∫–µ—Ç—ã:")
                else:
                    city = get_city_id(message)
                    if city:
                        users[user_id]['data']['city_id'] = city
                        action[user_id] = "null"
                        bot.answer("üò∫ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∞–Ω–∫–µ—Ç.", key_search)
                    else:
                        bot.answer("ü§ö –ù–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —É–∫–∞–∑–∞–Ω–Ω–æ–º –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–º –ø—É–Ω–∫—Ç–µ!\n"
                                   "\n"
                                   "‚úçÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è:", key_sex_choice)

            else:
                try:
                    if message == "üîé –ø–æ–∏—Å–∫!":
                        bot.answer("üîé –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫...")
                        fetched_data = search_profiles(user_id, users)
                        bot.answer(f"üíû {fetched_data['name']}, {fetched_data['age']} | –í –∞–∫—Ç–∏–≤–Ω–æ–º –ø–æ–∏—Å–∫–µ\n"
                                   f"–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: {fetched_data['page_link']}",
                                   attachment=fetched_data['photos'])
                    else:
                        bot.answer("üò∫ –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–Ω–∫–µ—Ç—ã!", key_search)
                except Exception as error:
                    print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:", error)
